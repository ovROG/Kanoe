@page "/config/twitch"
@using Kanoe2.Data.Models

<MudCard Class="mt-3">

    <MudCardHeader>
        <CardHeaderContent>
            <MudText Typo="Typo.h4"> <b>Twitch Config</b></MudText>
        </CardHeaderContent>
    </MudCardHeader>

    <MudCardContent>
        <Kanoe2.Shared.Components.PasswordInput @bind-Value="TwitchConfig.Id" Label="ID" Variant="Variant.Filled" Class="pt-3" />
        <Kanoe2.Shared.Components.PasswordInput @bind-Value="TwitchConfig.Token" Label="Token" Variant="Variant.Outlined" Margin="Margin.Dense" Class="pt-3" ReadOnly />
         <MudTextField @bind-Value="TwitchConfig.Login" Label="Login" Variant="Variant.Outlined" Margin="Margin.Dense" Class="pt-3" ReadOnly />
    </MudCardContent>

    <MudCardActions>
         <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="TwitchAuth" Class="ml-auto">Auth</MudButton>
    </MudCardActions>

</MudCard>

@code {
    [Inject]
    public required Services.Config ConfigService { get; set; }
    [Inject]
    public required NavigationManager Navigation { get; set; }

    public required TwitchConfig TwitchConfig { get; set; } = new TwitchConfig();

    protected override void OnInitialized()
    {
        LoadConfig();
    }

    private void LoadConfig()
    {
        TwitchConfig = ConfigService.GetTwitchConfig();
    }

    private void TwitchAuth()
    {
        if (TwitchConfig.Id != null)
        {
            ConfigService.SetTwitchId(TwitchConfig.Id);

            string OAuthParams =
            $"client_id={TwitchConfig.Id}" +
            $"&redirect_uri={Navigation.BaseUri}twitchoauth" +
            "&response_type=token" +
            "&force_verify=true" +
            "&scope=bits:read channel:read:redemptions channel:read:subscriptions";

            Navigation.NavigateTo($"https://id.twitch.tv/oauth2/authorize?{OAuthParams}");
        }
    }
}
